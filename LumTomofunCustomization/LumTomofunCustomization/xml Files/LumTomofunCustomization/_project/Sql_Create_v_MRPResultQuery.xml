<Sql TableName="Create_v_MRPResultQuery" SqlScriptPriority="2" CustomScript="#CDATA">
    <CDATA name="CustomScript"><![CDATA[IF EXISTS
(
	SELECT *
	FROM SYS.views
	WHERE name = 'v_MRPResultQuery' AND SCHEMA_ID = SCHEMA_ID('dbo')
)
DROP VIEW [dbo].[v_MRPResultQuery]	
GO
CREATE VIEW v_MRPResultQuery AS
WITH FirstRecordTmpTable AS (
	SELECT CompanyID, SKU, Warehouse,MIN(Date) AS FirstRecordTime
	FROM LUMMRPProcessResult
	GROUP BY CompanyID, SKU, Warehouse
)
-- Forecast
SELECT MRPType,
	   item.InventoryCD AS SKU,
	   comp.CompanyCD AS Company,
	   address.CountryID AS Country,
	   insite.SiteCD  AS Warehouse,
	   Date,
	   Qty,
	   Qty AS QtyWeek,
	   Qty AS QtyMonth
FROM LUMForecastUpload forecast
INNER JOIN Company comp  ON forecast.Company = comp.CompanyCD
INNER JOIN INSite insite ON comp.CompanyID = insite.CompanyID
						AND forecast.Warehouse = insite.SiteID
INNER JOIN InventoryItem item ON comp.CompanyID = item.CompanyID
							 AND forecast.SKU = item.InventoryID
INNER JOIN Address address ON insite.CompanyID = address.CompanyID
						  AND insite.AddressID = address.AddressID
WHERE comp.CompanyID > 0
-- MRP Result (Open SO Date-1)
UNION
SELECT 'OPEN SO(Date-1)' AS MRPType,
	   item.InventoryCD AS Sku,
	   comp.CompanyCD AS Company,
	  address.CountryID AS Country,
	   insite.SiteCD  AS Warehouse,
	   Date,
	   PastOpenSo AS Qty,
	   PastOpenSo AS QtyWeek,
	   PastOpenSo AS QtyMonth
FROM LUMMRPProcessResult result
INNER JOIN Company comp  ON result.CompanyID = comp.CompanyID
INNER JOIN INSite insite ON result.CompanyID = insite.CompanyID
						AND result.Warehouse = insite.SiteID
INNER JOIN InventoryItem item ON result.CompanyID = item.CompanyID
							 AND result.SKU = item.InventoryID
INNER JOIN Address address ON insite.CompanyID = address.CompanyID
						  AND insite.AddressID = address.AddressID
WHERE result.PastOpenSo is not null and result.CompanyID > 0
-- MRP Result (Forecast Initial)
UNION
SELECT 'Forecast Initial' AS MRPType,
	   item.InventoryCD AS Sku,
	   comp.CompanyCD AS Company,
	   address.CountryID AS Country,
	   insite.SiteCD  AS Warehouse,
	   Date,
	   ForecastIntial AS Qty,
	   CASE 
		WHEN tmp.FirstRecordTime IS NOT NULL THEN ForecastIntial
		WHEN tmp.FirstRecordTime IS NULL AND DatePart(WeekDay,Date)-1 = 1 THEN ForecastIntial
	   ELSE null END AS QtyWeek,
	   CASE
		WHEN tmp.FirstRecordTime IS NOT NULL THEN ForecastIntial
		WHEN tmp.FirstRecordTime IS NULL AND CAST(result.DATE AS Date) = CAST(DATEADD(MM,DATEDIFF(MM, 0, result.Date),0) AS Date) THEN ForecastIntial
	   ELSE null END AS QtyMonth
FROM LUMMRPProcessResult result
INNER JOIN Company comp  ON result.CompanyID = comp.CompanyID
INNER JOIN INSite insite ON result.CompanyID = insite.CompanyID
						AND result.Warehouse = insite.SiteID
INNER JOIN InventoryItem item ON result.CompanyID = item.CompanyID
							 AND result.SKU = item.InventoryID
INNER JOIN Address address ON insite.CompanyID = address.CompanyID
						  AND insite.AddressID = address.AddressID
LEFT JOIN FirstRecordTmpTable tmp ON result.CompanyID = tmp.CompanyID
							     AND result.Sku = tmp.Sku
								 AND result.Warehouse = tmp.Warehouse
								 AND result.Date = tmp.FirstRecordTime
WHERE result.ForecastIntial is not null and result.CompanyID > 0
-- MRP Result (SotckInitial)
UNION
SELECT 'Stock Initial' AS MRPType,
	   item.InventoryCD AS Sku,
	   comp.CompanyCD AS Company,
	   address.CountryID AS Country,
	   insite.SiteCD  AS Warehouse,
	   Date,
	   StockInitial AS Qty,
	   CASE 
		WHEN tmp.FirstRecordTime IS NOT NULL THEN StockInitial
		WHEN tmp.FirstRecordTime IS NULL AND DatePart(WeekDay,Date)-1 = 1 THEN StockInitial
	   ELSE null END AS QtyWeek,
	   CASE
		WHEN tmp.FirstRecordTime IS NOT NULL THEN StockInitial
		WHEN tmp.FirstRecordTime IS NULL AND CAST(result.DATE AS Date) = CAST(DATEADD(MM,DATEDIFF(MM, 0, result.Date),0) AS Date) THEN StockInitial
	   ELSE null END AS QtyMonth
FROM LUMMRPProcessResult result
INNER JOIN Company comp  ON result.CompanyID = comp.CompanyID
INNER JOIN INSite insite ON result.CompanyID = insite.CompanyID
						AND result.Warehouse = insite.SiteID
INNER JOIN InventoryItem item ON result.CompanyID = item.CompanyID
							 AND result.SKU = item.InventoryID
INNER JOIN Address address ON insite.CompanyID = address.CompanyID
						  AND insite.AddressID = address.AddressID
LEFT JOIN FirstRecordTmpTable tmp ON result.CompanyID = tmp.CompanyID
							     AND result.Sku = tmp.Sku
								 AND result.Warehouse = tmp.Warehouse
								 AND result.Date = tmp.FirstRecordTime
WHERE result.StockInitial is not null and result.CompanyID > 0
-- MRP Result (Demand)
UNION
SELECT 'Net Sales Demand' AS MRPType,
	   item.InventoryCD AS Sku,
	   comp.CompanyCD AS Company,
	   address.CountryID AS Country,
	   insite.SiteCD  AS Warehouse,
	   Date,
	   NetDemand AS Qty,
	   NetDemand AS QtyWeek,
	   NetDemand AS QtyMonth
FROM LUMMRPProcessResult result
INNER JOIN Company comp  ON result.CompanyID = comp.CompanyID
INNER JOIN INSite insite ON result.CompanyID = insite.CompanyID
						AND result.Warehouse = insite.SiteID
INNER JOIN InventoryItem item ON result.CompanyID = item.CompanyID
							 AND result.SKU = item.InventoryID
INNER JOIN Address address ON insite.CompanyID = address.CompanyID
						  AND insite.AddressID = address.AddressID
WHERE result.NetDemand is not null and result.CompanyID > 0
-- MRP Result (StockAva)
UNION
SELECT 'Stock Available' AS MRPType,
	   item.InventoryCD AS Sku,
	   comp.CompanyCD AS Company,
	   address.CountryID AS Country,
	   insite.SiteCD  AS Warehouse,
	   Date,
	   StockAva AS Qty,
	   CASE 
		WHEN tmp.FirstRecordTime IS NULL AND DatePart(WeekDay,Date)-1 = 0 THEN StockInitial
	   ELSE null END AS QtyWeek,
	   CASE
		WHEN tmp.FirstRecordTime IS NULL AND CAST(result.DATE AS Date) = CAST(DATEADD(MM,DATEDIFF(MM, -1, result.Date),-1) AS Date) THEN StockInitial
	   ELSE null END AS QtyMonth
FROM LUMMRPProcessResult result
INNER JOIN Company comp  ON result.CompanyID = comp.CompanyID
INNER JOIN INSite insite ON result.CompanyID = insite.CompanyID
						AND result.Warehouse = insite.SiteID
INNER JOIN InventoryItem item ON result.CompanyID = item.CompanyID
							 AND result.SKU = item.InventoryID
INNER JOIN Address address ON insite.CompanyID = address.CompanyID
						  AND insite.AddressID = address.AddressID
LEFT JOIN FirstRecordTmpTable tmp ON result.CompanyID = tmp.CompanyID
							     AND result.Sku = tmp.Sku
								 AND result.Warehouse = tmp.Warehouse
								 AND result.Date = tmp.FirstRecordTime
WHERE result.StockAva is not null and result.CompanyID > 0
-- MRP Result (Safety Stock)
UNION
SELECT 'Safety Stock' AS MRPType,
	   item.InventoryCD AS Sku,
	   comp.CompanyCD AS Company,
	   address.CountryID AS Country,
	   insite.SiteCD  AS Warehouse,
	   Date,
	   SafetyStock AS Qty,
	   SafetyStock AS QtyWeek,
	   SafetyStock AS QtyMonth
FROM LUMMRPProcessResult result
INNER JOIN Company comp  ON result.CompanyID = comp.CompanyID
INNER JOIN INSite insite ON result.CompanyID = insite.CompanyID
						AND result.Warehouse = insite.SiteID
INNER JOIN InventoryItem item ON result.CompanyID = item.CompanyID
							 AND result.SKU = item.InventoryID
INNER JOIN Address address ON insite.CompanyID = address.CompanyID
						  AND insite.AddressID = address.AddressID
WHERE result.SafetyStock is not null and result.CompanyID > 0
-- Inventory Allocate Details
UNION
SELECT LUMMRPPreference.GroupingType,
	   item.InventoryCD AS Sku,
	   comp.CompanyCD AS Company,
	   address.CountryID AS Country,
	   insite.SiteCD  AS Warehouse,
	   invDetails.Date,
	   invDetails.Qty,
	   invDetails.Qty AS QtyWeek,
	   invDetails.Qty AS QtyMonth
FROM v_InventoryAllocationDetais invDetails
INNER JOIN Company comp  ON invDetails.CompanyID = comp.CompanyID
INNER JOIN INSite insite ON invDetails.CompanyID = insite.CompanyID
						AND invDetails.SiteID = insite.SiteID
INNER JOIN InventoryItem item ON invDetails.CompanyID = item.CompanyID
							 AND invDetails.InventoryID = item.InventoryID
INNER JOIN LUMMRPPreference ON invDetails.CompanyID = LUMMRPPreference.CompanyID
						   AND LOWER(invDetails.AllocationType) = LOWER(LUMMRPPreference.AllocationType)
						   AND LUMMRPPreference.GroupingType is not null
						   AND LUMMRPPreference.GroupingType != ''
INNER JOIN Address address ON insite.CompanyID = address.CompanyID
						  AND insite.AddressID = address.AddressID
WHERE invDetails.CompanyID > 0]]></CDATA>
</Sql>